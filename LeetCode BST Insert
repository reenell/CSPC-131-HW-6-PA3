/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    //if there is no root present, then a new root is created
    TreeNode* insertIntoBST(TreeNode* root, int val) {
    if (root == nullptr) {
      return new TreeNode(val);
    }

    //the insert function is recursively called and placed to the left of the tree 
    //if the current root is greater than the value being inserted into the tree
    else if (root->val > val) {
      root->left = insertIntoBST(root->left, val);
    }

    //the insert function is recursively called and placed to the right of the tree
    //if the current root is less than the value being inserted into the tree
    else {
      root->right = insertIntoBST(root->right, val);
    }

    return root;
  }
};
